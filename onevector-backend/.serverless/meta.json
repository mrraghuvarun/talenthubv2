{
  "C:\\onevector-main\\onevector-backend": {
    "versionSfCore": null,
    "versionFramework": "4.4.18",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>",
      "env": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "express-app",
            "frameworkVersion": "4",
            "provider": {
              "name": "aws",
              "runtime": "nodejs18.x",
              "region": "ap-south-1",
              "environment": {
                "DB_HOST": "one-vector-main.cihlk4bj5clt.ap-south-1.rds.amazonaws.com",
                "DB_USER": "root",
                "DB_PASSWORD": "<REDACTED>",
                "DB_NAME": "one_vector_main",
                "JWT_SECRET": "<REDACTED>",
                "FRONTEND_URL": "https://main.djco7qrinrz5i.amplifyapp.com/",
                "EMAIL_FROM": "nunnacharan1234@gmail.com",
                "SMTP_HOST": "smtp.gmail.com",
                "SMTP_PORT": "587",
                "SMTP_USER": "nunnacharan1234@gmail.com",
                "SMTP_PASS": "pzvl vouv zrhn bdid",
                "S3_BUCKET_NAME": "onevectortalenthub"
              },
              "vpc": {
                "securityGroupIds": [
                  "sg-01f81a4c98a51298a"
                ],
                "subnetIds": [
                  "subnet-08c9999bb42f17e21"
                ]
              },
              "iam": {
                "role": {
                  "statements": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:PutObject",
                        "s3:GetObject",
                        "s3:ListBucket"
                      ],
                      "Resource": [
                        "arn:aws:s3:::onevectortalenthub/*",
                        "arn:aws:s3:::onevectortalenthub"
                      ]
                    }
                  ]
                }
              },
              "httpApi": {
                "cors": {
                  "allowedOrigins": [
                    "https://main.djco7qrinrz5i.amplifyapp.com"
                  ],
                  "allowedMethods": [
                    "GET",
                    "POST",
                    "PUT",
                    "DELETE",
                    "OPTIONS"
                  ],
                  "allowedHeaders": [
                    "Content-Type",
                    "Authorization"
                  ],
                  "maxAge": 3600
                },
                "logs": {
                  "level": "INFO",
                  "fullData": true
                }
              },
              "stage": "dev",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "AppLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/express-app-dev-app"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "express-app",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/express-app-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/express-app-dev*:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "s3:PutObject",
                                  "s3:GetObject",
                                  "s3:ListBucket"
                                ],
                                "Resource": [
                                  "arn:aws:s3:::onevectortalenthub/*",
                                  "arn:aws:s3:::onevectortalenthub"
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "express-app",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      },
                      "ManagedPolicyArns": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "AppLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-ap-south-1-f8eff4d1-f33a",
                        "S3Key": "serverless/express-app/dev/1735639050670-2024-12-31T09:57:30.670Z/express-app.zip"
                      },
                      "Handler": "server.handler",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "express-app-dev-app",
                      "MemorySize": 1024,
                      "Timeout": 300,
                      "Environment": {
                        "Variables": {
                          "DB_HOST": "one-vector-main.cihlk4bj5clt.ap-south-1.rds.amazonaws.com",
                          "DB_USER": "root",
                          "DB_PASSWORD": "<REDACTED>",
                          "DB_NAME": "one_vector_main",
                          "JWT_SECRET": "<REDACTED>",
                          "FRONTEND_URL": "https://main.djco7qrinrz5i.amplifyapp.com/",
                          "EMAIL_FROM": "nunnacharan1234@gmail.com",
                          "SMTP_HOST": "smtp.gmail.com",
                          "SMTP_PORT": "587",
                          "SMTP_USER": "nunnacharan1234@gmail.com",
                          "SMTP_PASS": "pzvl vouv zrhn bdid",
                          "S3_BUCKET_NAME": "onevectortalenthub"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "VpcConfig": {
                        "SecurityGroupIds": [
                          "sg-01f81a4c98a51298a"
                        ],
                        "SubnetIds": [
                          "subnet-08c9999bb42f17e21"
                        ]
                      }
                    },
                    "DependsOn": [
                      "AppLogGroup"
                    ]
                  },
                  "AppLambdaVersiong1LvrTTLQRIBJmnmjUnPYygbnVmmFwknkJCPu2R48bo": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "AppLambdaFunction"
                      },
                      "CodeSha256": "soYcp+i5aVyGrT1jDF80DXXWqY2G1qSc/QqzllQ3GLI="
                    }
                  },
                  "HttpApi": {
                    "Type": "AWS::ApiGatewayV2::Api",
                    "Properties": {
                      "Name": "dev-express-app",
                      "ProtocolType": "HTTP",
                      "CorsConfiguration": {
                        "AllowCredentials": "<REDACTED>",
                        "AllowHeaders": [
                          "Content-Type",
                          "Authorization"
                        ],
                        "AllowMethods": [
                          "GET",
                          "POST",
                          "PUT",
                          "DELETE",
                          "OPTIONS"
                        ],
                        "AllowOrigins": [
                          "https://main.djco7qrinrz5i.amplifyapp.com"
                        ],
                        "MaxAge": 3600
                      }
                    }
                  },
                  "HttpApiStage": {
                    "Type": "AWS::ApiGatewayV2::Stage",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "StageName": "$default",
                      "AutoDeploy": true,
                      "DefaultRouteSettings": {
                        "DetailedMetricsEnabled": false
                      }
                    }
                  },
                  "AppLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "AppLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationApp": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "AppLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRouteAnyProxyVar": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "ANY /{proxy+}",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationApp"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationApp"
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-ap-south-1-f8eff4d1-f33a",
                    "Export": {
                      "Name": "sls-express-app-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "AppLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "AppLambdaVersiong1LvrTTLQRIBJmnmjUnPYygbnVmmFwknkJCPu2R48bo"
                    },
                    "Export": {
                      "Name": "sls-express-app-dev-AppLambdaFunctionQualifiedArn"
                    }
                  },
                  "HttpApiId": {
                    "Description": "Id of the HTTP API",
                    "Value": {
                      "Ref": "HttpApi"
                    },
                    "Export": {
                      "Name": "sls-express-app-dev-HttpApiId"
                    }
                  },
                  "HttpApiUrl": {
                    "Description": "URL of the HTTP API",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "HttpApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          }
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-express-app-dev-HttpApiUrl"
                    }
                  }
                }
              }
            },
            "functions": {
              "app": {
                "handler": "server.handler",
                "timeout": 300,
                "events": [
                  {
                    "httpApi": {
                      "path": "/{proxy+}",
                      "method": "ANY",
                      "cors": true
                    },
                    "resolvedMethod": "ANY",
                    "resolvedPath": "/{proxy+}"
                  }
                ],
                "name": "express-app-dev-app",
                "package": {},
                "memory": 1024,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "AppLambdaVersiong1LvrTTLQRIBJmnmjUnPYygbnVmmFwknkJCPu2R48bo"
              }
            },
            "plugins": [
              "serverless-dotenv-plugin"
            ],
            "package": {
              "exclude": [
                ".git/**",
                ".gitignore"
              ],
              "include": [
                "node_modules/**",
                "server.js"
              ],
              "artifactsS3KeyDirname": "serverless/express-app/dev/code-artifacts",
              "deploymentBucket": "serverless-framework-deployments-ap-south-1-f8eff4d1-f33a",
              "artifact": "C:\\onevector-main\\onevector-backend\\.serverless\\express-app.zip",
              "artifactDirectoryName": "serverless/express-app/dev/1735639050670-2024-12-31T09:57:30.670Z"
            },
            "custom": {
              "dotenv": {
                "path": ".env"
              }
            }
          },
          "configFileDirPath": "C:\\onevector-main\\onevector-backend",
          "config": {
            "type": "env"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:env",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      },
      "sls": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "express-app",
            "frameworkVersion": "4",
            "provider": {
              "name": "aws",
              "runtime": "nodejs18.x",
              "region": "ap-south-1",
              "environment": {
                "DB_HOST": "one-vector-main.cihlk4bj5clt.ap-south-1.rds.amazonaws.com",
                "DB_USER": "root",
                "DB_PASSWORD": "<REDACTED>",
                "DB_NAME": "one_vector_main",
                "JWT_SECRET": "<REDACTED>",
                "FRONTEND_URL": "https://main.djco7qrinrz5i.amplifyapp.com/",
                "EMAIL_FROM": "nunnacharan1234@gmail.com",
                "SMTP_HOST": "smtp.gmail.com",
                "SMTP_PORT": "587",
                "SMTP_USER": "nunnacharan1234@gmail.com",
                "SMTP_PASS": "pzvl vouv zrhn bdid",
                "S3_BUCKET_NAME": "onevectortalenthub"
              },
              "vpc": {
                "securityGroupIds": [
                  "sg-01f81a4c98a51298a"
                ],
                "subnetIds": [
                  "subnet-08c9999bb42f17e21"
                ]
              },
              "iam": {
                "role": {
                  "statements": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:PutObject",
                        "s3:GetObject",
                        "s3:ListBucket"
                      ],
                      "Resource": [
                        "arn:aws:s3:::onevectortalenthub/*",
                        "arn:aws:s3:::onevectortalenthub"
                      ]
                    }
                  ]
                }
              },
              "httpApi": {
                "cors": {
                  "allowedOrigins": [
                    "https://main.djco7qrinrz5i.amplifyapp.com"
                  ],
                  "allowedMethods": [
                    "GET",
                    "POST",
                    "PUT",
                    "DELETE",
                    "OPTIONS"
                  ],
                  "allowedHeaders": [
                    "Content-Type",
                    "Authorization"
                  ],
                  "maxAge": 3600
                },
                "logs": {
                  "level": "INFO",
                  "fullData": true
                }
              },
              "stage": "dev",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "AppLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/express-app-dev-app"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "express-app",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/express-app-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/express-app-dev*:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "s3:PutObject",
                                  "s3:GetObject",
                                  "s3:ListBucket"
                                ],
                                "Resource": [
                                  "arn:aws:s3:::onevectortalenthub/*",
                                  "arn:aws:s3:::onevectortalenthub"
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "express-app",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      },
                      "ManagedPolicyArns": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "AppLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-ap-south-1-f8eff4d1-f33a",
                        "S3Key": "serverless/express-app/dev/1735639050670-2024-12-31T09:57:30.670Z/express-app.zip"
                      },
                      "Handler": "server.handler",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "express-app-dev-app",
                      "MemorySize": 1024,
                      "Timeout": 300,
                      "Environment": {
                        "Variables": {
                          "DB_HOST": "one-vector-main.cihlk4bj5clt.ap-south-1.rds.amazonaws.com",
                          "DB_USER": "root",
                          "DB_PASSWORD": "<REDACTED>",
                          "DB_NAME": "one_vector_main",
                          "JWT_SECRET": "<REDACTED>",
                          "FRONTEND_URL": "https://main.djco7qrinrz5i.amplifyapp.com/",
                          "EMAIL_FROM": "nunnacharan1234@gmail.com",
                          "SMTP_HOST": "smtp.gmail.com",
                          "SMTP_PORT": "587",
                          "SMTP_USER": "nunnacharan1234@gmail.com",
                          "SMTP_PASS": "pzvl vouv zrhn bdid",
                          "S3_BUCKET_NAME": "onevectortalenthub"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "VpcConfig": {
                        "SecurityGroupIds": [
                          "sg-01f81a4c98a51298a"
                        ],
                        "SubnetIds": [
                          "subnet-08c9999bb42f17e21"
                        ]
                      }
                    },
                    "DependsOn": [
                      "AppLogGroup"
                    ]
                  },
                  "AppLambdaVersiong1LvrTTLQRIBJmnmjUnPYygbnVmmFwknkJCPu2R48bo": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "AppLambdaFunction"
                      },
                      "CodeSha256": "soYcp+i5aVyGrT1jDF80DXXWqY2G1qSc/QqzllQ3GLI="
                    }
                  },
                  "HttpApi": {
                    "Type": "AWS::ApiGatewayV2::Api",
                    "Properties": {
                      "Name": "dev-express-app",
                      "ProtocolType": "HTTP",
                      "CorsConfiguration": {
                        "AllowCredentials": "<REDACTED>",
                        "AllowHeaders": [
                          "Content-Type",
                          "Authorization"
                        ],
                        "AllowMethods": [
                          "GET",
                          "POST",
                          "PUT",
                          "DELETE",
                          "OPTIONS"
                        ],
                        "AllowOrigins": [
                          "https://main.djco7qrinrz5i.amplifyapp.com"
                        ],
                        "MaxAge": 3600
                      }
                    }
                  },
                  "HttpApiStage": {
                    "Type": "AWS::ApiGatewayV2::Stage",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "StageName": "$default",
                      "AutoDeploy": true,
                      "DefaultRouteSettings": {
                        "DetailedMetricsEnabled": false
                      }
                    }
                  },
                  "AppLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "AppLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationApp": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "AppLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRouteAnyProxyVar": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "ANY /{proxy+}",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationApp"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationApp"
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-ap-south-1-f8eff4d1-f33a",
                    "Export": {
                      "Name": "sls-express-app-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "AppLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "AppLambdaVersiong1LvrTTLQRIBJmnmjUnPYygbnVmmFwknkJCPu2R48bo"
                    },
                    "Export": {
                      "Name": "sls-express-app-dev-AppLambdaFunctionQualifiedArn"
                    }
                  },
                  "HttpApiId": {
                    "Description": "Id of the HTTP API",
                    "Value": {
                      "Ref": "HttpApi"
                    },
                    "Export": {
                      "Name": "sls-express-app-dev-HttpApiId"
                    }
                  },
                  "HttpApiUrl": {
                    "Description": "URL of the HTTP API",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "HttpApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          }
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-express-app-dev-HttpApiUrl"
                    }
                  }
                }
              }
            },
            "functions": {
              "app": {
                "handler": "server.handler",
                "timeout": 300,
                "events": [
                  {
                    "httpApi": {
                      "path": "/{proxy+}",
                      "method": "ANY",
                      "cors": true
                    },
                    "resolvedMethod": "ANY",
                    "resolvedPath": "/{proxy+}"
                  }
                ],
                "name": "express-app-dev-app",
                "package": {},
                "memory": 1024,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "AppLambdaVersiong1LvrTTLQRIBJmnmjUnPYygbnVmmFwknkJCPu2R48bo"
              }
            },
            "plugins": [
              "serverless-dotenv-plugin"
            ],
            "package": {
              "exclude": [
                ".git/**",
                ".gitignore"
              ],
              "include": [
                "node_modules/**",
                "server.js"
              ],
              "artifactsS3KeyDirname": "serverless/express-app/dev/code-artifacts",
              "deploymentBucket": "serverless-framework-deployments-ap-south-1-f8eff4d1-f33a",
              "artifact": "C:\\onevector-main\\onevector-backend\\.serverless\\express-app.zip",
              "artifactDirectoryName": "serverless/express-app/dev/1735639050670-2024-12-31T09:57:30.670Z"
            },
            "custom": {
              "dotenv": {
                "path": ".env"
              }
            }
          },
          "configFileDirPath": "C:\\onevector-main\\onevector-backend",
          "config": {
            "type": "sls"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:sls",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "C:\\onevector-main\\onevector-backend",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "express-app",
      "frameworkVersion": "4",
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "ap-south-1",
        "environment": {
          "DB_HOST": "one-vector-main.cihlk4bj5clt.ap-south-1.rds.amazonaws.com",
          "DB_USER": "root",
          "DB_PASSWORD": "<REDACTED>",
          "DB_NAME": "one_vector_main",
          "JWT_SECRET": "<REDACTED>",
          "FRONTEND_URL": "https://main.djco7qrinrz5i.amplifyapp.com/",
          "EMAIL_FROM": "nunnacharan1234@gmail.com",
          "SMTP_HOST": "smtp.gmail.com",
          "SMTP_PORT": "587",
          "SMTP_USER": "nunnacharan1234@gmail.com",
          "SMTP_PASS": "pzvl vouv zrhn bdid",
          "S3_BUCKET_NAME": "onevectortalenthub"
        },
        "vpc": {
          "securityGroupIds": [
            "sg-01f81a4c98a51298a"
          ],
          "subnetIds": [
            "subnet-08c9999bb42f17e21"
          ]
        },
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "s3:PutObject",
                  "s3:GetObject",
                  "s3:ListBucket"
                ],
                "Resource": [
                  "arn:aws:s3:::onevectortalenthub/*",
                  "arn:aws:s3:::onevectortalenthub"
                ]
              }
            ]
          }
        },
        "httpApi": {
          "cors": {
            "allowedOrigins": [
              "https://main.djco7qrinrz5i.amplifyapp.com"
            ],
            "allowedMethods": [
              "GET",
              "POST",
              "PUT",
              "DELETE",
              "OPTIONS"
            ],
            "allowedHeaders": [
              "Content-Type",
              "Authorization"
            ],
            "maxAge": 3600
          },
          "logs": {
            "level": "INFO",
            "fullData": true
          }
        },
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "AppLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/express-app-dev-app"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "express-app",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/express-app-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/express-app-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "s3:PutObject",
                            "s3:GetObject",
                            "s3:ListBucket"
                          ],
                          "Resource": [
                            "arn:aws:s3:::onevectortalenthub/*",
                            "arn:aws:s3:::onevectortalenthub"
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "express-app",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                },
                "ManagedPolicyArns": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                      ]
                    ]
                  }
                ]
              }
            },
            "AppLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-ap-south-1-f8eff4d1-f33a",
                  "S3Key": "serverless/express-app/dev/1735639050670-2024-12-31T09:57:30.670Z/express-app.zip"
                },
                "Handler": "server.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "express-app-dev-app",
                "MemorySize": 1024,
                "Timeout": 300,
                "Environment": {
                  "Variables": {
                    "DB_HOST": "one-vector-main.cihlk4bj5clt.ap-south-1.rds.amazonaws.com",
                    "DB_USER": "root",
                    "DB_PASSWORD": "<REDACTED>",
                    "DB_NAME": "one_vector_main",
                    "JWT_SECRET": "<REDACTED>",
                    "FRONTEND_URL": "https://main.djco7qrinrz5i.amplifyapp.com/",
                    "EMAIL_FROM": "nunnacharan1234@gmail.com",
                    "SMTP_HOST": "smtp.gmail.com",
                    "SMTP_PORT": "587",
                    "SMTP_USER": "nunnacharan1234@gmail.com",
                    "SMTP_PASS": "pzvl vouv zrhn bdid",
                    "S3_BUCKET_NAME": "onevectortalenthub"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "VpcConfig": {
                  "SecurityGroupIds": [
                    "sg-01f81a4c98a51298a"
                  ],
                  "SubnetIds": [
                    "subnet-08c9999bb42f17e21"
                  ]
                }
              },
              "DependsOn": [
                "AppLogGroup"
              ]
            },
            "AppLambdaVersiong1LvrTTLQRIBJmnmjUnPYygbnVmmFwknkJCPu2R48bo": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "AppLambdaFunction"
                },
                "CodeSha256": "soYcp+i5aVyGrT1jDF80DXXWqY2G1qSc/QqzllQ3GLI="
              }
            },
            "HttpApi": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "dev-express-app",
                "ProtocolType": "HTTP",
                "CorsConfiguration": {
                  "AllowCredentials": "<REDACTED>",
                  "AllowHeaders": [
                    "Content-Type",
                    "Authorization"
                  ],
                  "AllowMethods": [
                    "GET",
                    "POST",
                    "PUT",
                    "DELETE",
                    "OPTIONS"
                  ],
                  "AllowOrigins": [
                    "https://main.djco7qrinrz5i.amplifyapp.com"
                  ],
                  "MaxAge": 3600
                }
              }
            },
            "HttpApiStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "StageName": "$default",
                "AutoDeploy": true,
                "DefaultRouteSettings": {
                  "DetailedMetricsEnabled": false
                }
              }
            },
            "AppLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "AppLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationApp": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "AppLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteAnyProxyVar": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "ANY /{proxy+}",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationApp"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationApp"
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-ap-south-1-f8eff4d1-f33a",
              "Export": {
                "Name": "sls-express-app-dev-ServerlessDeploymentBucketName"
              }
            },
            "AppLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "AppLambdaVersiong1LvrTTLQRIBJmnmjUnPYygbnVmmFwknkJCPu2R48bo"
              },
              "Export": {
                "Name": "sls-express-app-dev-AppLambdaFunctionQualifiedArn"
              }
            },
            "HttpApiId": {
              "Description": "Id of the HTTP API",
              "Value": {
                "Ref": "HttpApi"
              },
              "Export": {
                "Name": "sls-express-app-dev-HttpApiId"
              }
            },
            "HttpApiUrl": {
              "Description": "URL of the HTTP API",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "HttpApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "Export": {
                "Name": "sls-express-app-dev-HttpApiUrl"
              }
            }
          }
        }
      },
      "functions": {
        "app": {
          "handler": "server.handler",
          "timeout": 300,
          "events": [
            {
              "httpApi": {
                "path": "/{proxy+}",
                "method": "ANY",
                "cors": true
              },
              "resolvedMethod": "ANY",
              "resolvedPath": "/{proxy+}"
            }
          ],
          "name": "express-app-dev-app",
          "package": {},
          "memory": 1024,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "AppLambdaVersiong1LvrTTLQRIBJmnmjUnPYygbnVmmFwknkJCPu2R48bo"
        }
      },
      "plugins": [
        "serverless-dotenv-plugin"
      ],
      "package": {
        "exclude": [
          ".git/**",
          ".gitignore"
        ],
        "include": [
          "node_modules/**",
          "server.js"
        ],
        "artifactsS3KeyDirname": "serverless/express-app/dev/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-ap-south-1-f8eff4d1-f33a",
        "artifact": "C:\\onevector-main\\onevector-backend\\.serverless\\express-app.zip",
        "artifactDirectoryName": "serverless/express-app/dev/1735639050670-2024-12-31T09:57:30.670Z"
      },
      "custom": {
        "dotenv": {
          "path": ".env"
        }
      }
    },
    "serviceRawFile": "service: express-app\r\n\r\nframeworkVersion: '4'\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs18.x\r\n  region: ap-south-1\r\n  environment:\r\n    DB_HOST: ${env:DB_HOST}\r\n    DB_USER: ${env:DB_USER}\r\n    DB_PASSWORD: ${env:DB_PASSWORD}\r\n    DB_NAME: ${env:DB_NAME}\r\n    JWT_SECRET: ${env:JWT_SECRET}\r\n    FRONTEND_URL: ${env:FRONTEND_URL}\r\n    EMAIL_FROM: ${env:EMAIL_FROM}\r\n    SMTP_HOST: ${env:SMTP_HOST}\r\n    SMTP_PORT: ${env:SMTP_PORT}\r\n    SMTP_USER: ${env:SMTP_USER}\r\n    SMTP_PASS: ${env:SMTP_PASS}\r\n    S3_BUCKET_NAME: ${env:S3_BUCKET_NAME}\r\n  vpc:\r\n    securityGroupIds:\r\n      - sg-01f81a4c98a51298a\r\n    subnetIds:\r\n      - subnet-08c9999bb42f17e21\r\n  iam:\r\n    role:\r\n      statements:\r\n        - Effect: \"Allow\"\r\n          Action:\r\n            - \"s3:PutObject\"\r\n            - \"s3:GetObject\"\r\n            - \"s3:ListBucket\"\r\n          Resource:\r\n            - \"arn:aws:s3:::${env:S3_BUCKET_NAME}/*\"\r\n            - \"arn:aws:s3:::${env:S3_BUCKET_NAME}\"\r\n  httpApi:\r\n    cors:\r\n      allowedOrigins:\r\n        - 'https://main.djco7qrinrz5i.amplifyapp.com'\r\n      allowedMethods:\r\n        - GET\r\n        - POST\r\n        - PUT\r\n        - DELETE\r\n        - OPTIONS\r\n      allowedHeaders:\r\n        - Content-Type\r\n        - Authorization\r\n      maxAge: 3600\r\n    # Enable CloudWatch logging\r\n    logs:\r\n      level: INFO  # You can use DEBUG, INFO, ERROR, etc.\r\n      fullData: true  # This logs full data for each request (helpful for debugging)\r\n\r\nfunctions:\r\n  app:\r\n    handler: server.handler\r\n    timeout: 300  # Increase timeout to 3 minutes\r\n    events:\r\n      - httpApi:\r\n          path: /{proxy+}\r\n          method: ANY\r\n          cors: true\r\n\r\nplugins:\r\n  - serverless-dotenv-plugin\r\n\r\npackage:\r\n  exclude:\r\n    - .git/**\r\n    - .gitignore\r\n  include:\r\n    - node_modules/**\r\n    - server.js\r\n\r\ncustom:\r\n  dotenv:\r\n    path: .env\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "fb011b69384c9e194892bfe3dbdc8815",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "17cf98c5-90f2-4332-a8d4-a366078949a2",
    "orgName": "onevector",
    "userId": "xfS0bvyNHVBNvBC4gX",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "onevector",
    "subscription": null,
    "userEmail": "nunnacharan1234@gmail.com",
    "serviceProviderAwsRegion": "ap-south-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "232533506758",
    "projectType": "traditional",
    "versionSf": "4.4.18",
    "serviceProviderAwsCfStackName": "express-app-dev",
    "integrations": {},
    "serviceUniqueId": "arn:aws:cloudformation:ap-south-1:232533506758:stack/express-app-dev/745d8010-b894-11ef-820e-0623b4c9ff19",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:ap-south-1:232533506758:stack/express-app-dev/745d8010-b894-11ef-820e-0623b4c9ff19",
    "serviceProviderAwsCfStackCreated": "2024-12-12T14:22:01.974Z",
    "serviceProviderAwsCfStackUpdated": "2024-12-31T09:57:58.268Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "AppLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:ap-south-1:232533506758:function:express-app-dev-app:49",
        "Description": "Current Lambda function version",
        "ExportName": "sls-express-app-dev-AppLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "5q5faxzgb7",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-express-app-dev-HttpApiId"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-ap-south-1-f8eff4d1-f33a",
        "ExportName": "sls-express-app-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://5q5faxzgb7.execute-api.ap-south-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-express-app-dev-HttpApiUrl"
      }
    ]
  }
}